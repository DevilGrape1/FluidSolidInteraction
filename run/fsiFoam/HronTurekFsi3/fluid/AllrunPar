#!/bin/sh

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Check if correct number of run-time parameters exists
if [ -z ${1+x} ]; then 
	#$1 is unset, so no parallel simulation
	echo "No parallel simulation requested. Please use ./Allrun instead"
	exit 1
fi

# Change number of workers to be used
num=$(sed -n '/numberOfSubdomains/=' ./system/decomposeParDict)
sed -i "${num}d" ./system/decomposeParDict
sed -i "${num}i numberOfSubdomains $1;" ./system/decomposeParDict
num=$(( $(sed -n '/simpleCoeffs/=' ./system/decomposeParDict) + 2 ))
sed -i "${num}d" ./system/decomposeParDict
sed -i "${num}i \    n               ($1 1 1);" ./system/decomposeParDict

num=$(sed -n '/numberOfSubdomains/=' ../solid/system/decomposeParDict)
sed -i "${num}d" ../solid/system/decomposeParDict
sed -i "${num}i numberOfSubdomains $1;" ../solid/system/decomposeParDict
num=$(( $(sed -n '/simpleCoeffs/=' ../solid/system/decomposeParDict) + 2 ))
sed -i "${num}d" ../solid/system/decomposeParDict
sed -i "${num}i \    n               ($1 1 1);" ../solid/system/decomposeParDict

# Get application name
application=`getApplication`

runApplication -l log.blockMesh.solid blockMesh -case ../solid
runApplication -l log.setSet.solid setSet -case ../solid -batch ../solid/setBatch
runApplication -l log.setToZones.solid setsToZones -case ../solid -noFlipMap
runApplication -l log.decomposePar.solid decomposePar -case ../solid

runApplication blockMesh
runApplication setSet -batch setBatch
runApplication setsToZones -noFlipMap
runApplication decomposePar
#mv constant/polyMesh/points.gz constant/polyMesh/points
cd ..

# Build hronTurekReport function object
wmake libso hronTurekReport

./makeLinks fluid solid

cd fluid

runParallel $application $1

runApplication reconstructPar

grep -rE 'ERROR|error|Error'
